{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","src","monster","id","name","CardList","className","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,YCEFA,EAAO,SAACC,GAEjB,OACI,gCACI,qBAAKC,IAAG,+BAA0BD,EAAME,QAAQC,GAAxC,eACR,6BAAKH,EAAME,QAAQE,WCHlBC,EAAW,SAACL,GAEvB,OACE,qBAAKM,UAAU,MAAf,SAEIN,EAAMO,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCVhBM,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOC,KAAK,SACRF,YAAaA,EACbG,SAAUF,KCoEHG,E,kDA9Db,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,CACR,CACEH,KAAM,YACND,GAAI,MAMRa,YAAa,IAKf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBAlBR,E,qDAuBd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,0BAK7C,SAAaE,GACXC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,oBAKxC,WAAU,IAAD,EAC2BF,KAAKV,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZY,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAEpG,OADAE,QAAQC,IAAIL,GAEV,qBAAKtB,UAAU,MAAf,SAIE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWI,YAAY,kBACrBC,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUJ,SAAUqB,a,GApDZM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.03daf544.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\n\nexport const Card = (props) => {\n\n    return (\n        <div>\n            <img src={`https://robohash.org/${props.monster.id}?set=set2`} />\n            <h2>{props.monster.name}</h2>\n        </div>\n\n    )\n\n\n}","\nimport { Card } from '../card/card.component';\n\n\nexport const CardList = (props) => {\n\n  return (\n    <div className=\"row\">\n      {\n        props.monsters.map(monster => (\n          <Card key={monster.id} monster={monster}></Card>\n        ))\n      }\n    </div>\n  )\n}\n\n\n","export const SearchBox = ({placeholder,handleChange }) => (\n    <input type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n)\n\n\n\n\n\n","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n//import Card from './components/card-list/card.component';\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [\n        {\n          name: \"loding...\",\n          id: '1'\n        },\n\n      ],\n\n\n      searchField: ''\n\n    }\n\n\n    this.handleChange = this.handleChange.bind(this)\n\n  }\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    console.log(filteredMonsters);\n    return (\n      <div className=\"App\">\n\n\n\n        <div className=\"container\">\n          <SearchBox placeholder='search monsters'\n            handleChange={this.handleChange}\n          />\n          <CardList monsters={filteredMonsters} />\n        </div>\n\n\n      </div >\n    );\n\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}